@prefix rr: <http://www.w3.org/ns/r2rml#>.
@prefix ex: <http://example.com/ns#>.
@prefix map: <http://mapping.local/>.
@prefix sty: <http://purl.bioontology.org/ontology/STY/>.
@prefix sio: <http://semanticscience.org/resource/SIO_>.
@prefix foaf: <http://xmlns.com/foaf/0.1/>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.
@prefix ncit: <http://ncicb.nci.nih.gov/xml/owl/EVS/Thesaurus.owl#>.
@prefix roo: <http://www.cancerdata.org/roo/>.
@prefix icd: <http://purl.bioontology.org/ontology/ICD10/>.
@prefix skos: <http://www.w3.org/2008/05/skos#>.
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix uo: <http://purl.obolibrary.org/obo/uo_>.
@prefix time: <http://www.w3.org/2006/time#>.


map:basicQuery a rr:LogicalTable;
    rr:sqlQuery """SELECT PatientID as id,  ROUND(CAST(Age as decimal),0) as age, Gender as sex, Clinical_T_Stage as clinical_t, Clinical_N_Stage as clinical_n,
SurvivalTime as survival_time,DeadStatus as vital_status, 
(CASE WHEN (CAST(SurvivalTime as decimal)>730) THEN 1 WHEN (CAST(SurvivalTime as decimal)<=730 AND DeadStatus='1') THEN 0 ELSE NULL END) AS survival_2y 
FROM PBDWHackathon2018;""";
    rdfs:label """Every row in this table should correspond to a unique patient.<br/>
The target variables have the following name and specific meaning:
The table should contain a unique patient identifier, age, sex, t-stage, n-stage, survival time in days and vital status at this time.<br/>
<ul>
<li>id: unique identifier of the patient</li>
<li>age:  patient's age at diagnosis</li>
<li>sex:  patient's biological sex</li>
<li>clinical_t: clinical <strong>tumor</strong> stage</li>
<li>clinical_n: clinical <strong>nodal</strong> stage</li>
<li>survival_2y: two year survival </li>
</ul>""";
    skos:definition "id,age,sex,clinical_t,clinical_n,survival_2y".

map:patient a rr:TriplesMap;
    rr:logicalTable map:basicQuery; 
    rr:subjectMap [
        rr:template "patient/";
        rr:class ncit:C16960;
    ];
        rr:predicateObjectMap [
        rr:predicate roo:P100024; # has procedure
        rr:objectMap [
            rr:parentTriplesMap map:radiotherapy;
        ];
    ];    
    rr:predicateObjectMap [
        rr:predicate roo:P100024; # has procedure
        rr:objectMap [
            rr:parentTriplesMap map:systemicTreatment;
        ];
    ];
    rr:predicateObjectMap [
        rr:predicate roo:has_reported;                                                             # new roo predicate                                                                                           # reports?
        rr:objectMap [
            rr:parentTriplesMap map:patientReportedOutcomeMeasures;
        ];
    ];
    rr:predicateObjectMap [
        rr:predicate roo:decides;
        rr:objectMap [
            rr:parentTriplesMap map:treatmentRegimen;
        ];
    ];    
    rr:predicateObjectMap [
        rr:predicate roo:has_subtype;
        rr:objectMap [
            rr:parentTriplesMap map:treatment;
        ];
    ].

map:treatment a rr:TriplesMap;
    rr:logicalTable map:basicQuery;    
    rr:subjectMap [
            rr:template "treatment";
            rr:class ncit:C49236; #Therapeutic Procedure
    ];
    rr:predicateObjectMap [
        rr:predicate roo:P100402 ; #treats
        rr:objectMap [
            rr:parentTriplesMap map:localRecurrence;
        ];
    ];
    rr:predicateObjectMap [
        rr:predicate roo:P100402 ; #treats
        rr:objectMap [
            rr:parentTriplesMap map:regionalRecurrence;
        ];
    ].

map:localRecurrence a rr:TriplesMap;
    rr:logicalTable map:basicQuery; 
    rr:subjectMap [
        rr:template "localRecurrence";
        rr:class roo:localRecurrence;                                                            #new roo class
    ];
    rr:predicateObjectMap [
        rr:predicate roo:P100042; #has_value
        rr:objectMap [
            rr:column "localRecurrence"; 
            rr:datatype xsd:boulean;
        ];
    ].

map:regionalRecurrence a rr:TriplesMap;
    rr:logicalTable map:basicQuery; 
    rr:subjectMap [
        rr:template "regionalRecurrence";
        rr:class roo:regionalRecurrence;                                                            #new roo class
    ];
    rr:predicateObjectMap [
        rr:predicate roo:P100042; #has_value
        rr:objectMap [
            rr:column "regionalRecurrence"; 
            rr:datatype xsd:boulean;
        ];
    ].

map:radiotherapy a rr:TriplesMap;
    rr:logicalTable map:basicQuery;    
    rr:subjectMap [
            rr:template "patient/radiotherapy";
            rr:class ncit:C15313;
    ];
    rr:predicateObjectMap [
        rr:predicate roo:has_subtype; #                                                            new roo predicate  
        rr:objectMap [
            rr:parentTriplesMap map:reirradiation;
        ];
    ];
    rr:predicateObjectMap [
        rr:predicate roo:P100024; #has_property
        rr:objectMap [
            rr:parentTriplesMap map:prophylacticTargetRT;
        ];
    ];
    rr:predicateObjectMap [
        rr:predicate roo:P100024; #has_property
        rr:objectMap [
            rr:parentTriplesMap map:therapeuticTargetRT;
        ];
    ];    
    rr:predicateObjectMap [
        rr:predicate roo:has_treatmentTechnique; #                                            new roo predicate                                 
        rr:objectMap [
            rr:parentTriplesMap map:IGRT;
        ];
    ];
     rr:predicateObjectMap [
        rr:predicate roo:has_treatmentTechnique; #                                             new roo predicate 
        rr:objectMap [
            rr:parentTriplesMap map:ART;
        ];
    ];
     rr:predicateObjectMap [
        rr:predicate roo:P100082; #has occurence                                        
        rr:objectMap [
            rr:parentTriplesMap map:planAdapted;
        ];
    ];
     rr:predicateObjectMap [
        rr:predicate roo:has_treatmentTechnique; #                                         new roo predicate 
        rr:objectMap [
            rr:parentTriplesMap map:protonTherapyFactors;
        ];
    ].

map:reirradiation a rr:TriplesMap;
    rr:logicalTable map:basicQuery; 
    rr:subjectMap [
        rr:template "patient/";
        rr:class roo:reirradiation;                                                         #new roo class
    ];
    rr:predicateObjectMap [
        rr:predicate roo:P100223; #has_count
        rr:objectMap [
            rr:column "reirradiationNumber"; 
            rr:datatype xsd:integer;
        ];
    ].

map:treatmentRegimen a rr:TriplesMap;
    rr:logicalTable map:basicQuery; 
    rr:subjectMap [
        rr:template "patient/treatmentRegimen";
        rr:class ncit:C15697; #Treatment Regimen
    ];
    rr:predicateObjectMap [
        rr:predicate roo:P100423; #consists_of
        rr:objectMap [
            rr:parentTriplesMap map:radiotherapy;
        ];
    ];
    rr:predicateObjectMap [
        rr:predicate roo:P100423; #consists_of
        rr:objectMap [
            rr:parentTriplesMap map:surgery;
        ];
    ];
    rr:predicateObjectMap [
        rr:predicate roo:P100423; #consists_of
        rr:objectMap [
            rr:parentTriplesMap map:systemicTreatment;
        ];
    ].

map:systemicTreatment a rr:TriplesMap;
    rr:logicalTable map:basicQuery;
    rr:subjectMap [
        rr:template "systemic treatment";
        rr:class ncit:C15632; #chemotherapy
    ];
    rr:predicateObjectMap [
        rr:predicate roo:P100042;  #has value
        rr:objectMap [
            rr:column "systemic treatment"; 
            rr:datatype xsd:integer;
        ];
    ];
   rr:predicateObjectMap [
        rr:predicate roo:P100423; #consists of
        rr:objectMap [
            rr:parentTriplesMap map:whichDrugs;
        ];
    ];
   rr:predicateObjectMap [
        rr:predicate roo:P100239; #has_chemo_start_date
        rr:objectMap [
            rr:column "startdate"; 
            rr:datatype xsd:date;
        ];
    ];
   rr:predicateObjectMap [
        rr:predicate roo:P100337; #has_chemo_end_date
        rr:objectMap [
            rr:column "enddate"; 
            rr:datatype xsd:date;
        ];
    ];
   rr:predicateObjectMap [
        rr:predicate roo:P100423; #consists of
        rr:objectMap [
            rr:parentTriplesMap map:treatmentCycles;
        ];
    ];
   rr:predicateObjectMap [
        rr:predicate roo:P100423; #consists of
        rr:objectMap [
            rr:parentTriplesMap map:totalDose;
        ];
     ];
   rr:predicateObjectMap [
        rr:predicate roo:P100423; #consists of
        rr:objectMap [
            rr:parentTriplesMap map:doseReduction;
        ];
     ];
   rr:predicateObjectMap [
        rr:predicate roo:P100423; #consists of
        rr:objectMap [
            rr:parentTriplesMap map:includedInTrial;
        ];
    ].

map:whichDrugs a rr:TriplesMap;
    rr:logicalTable map:basicQuery;
    rr:subjectMap [
        rr:template "which drugs";
        rr:class ncit:C459 #medication
    ];
     rr:predicateObjectMap [
        rr:predicate roo:P100042;  #has value
        rr:objectMap [
            rr:column "which drugs"; 
            rr:datatype xsd:integer;
        ];
    ].

map:treatmentCycles a rr:TriplesMap;
    rr:logicalTable map:basicQuery;
    rr:subjectMap [
        rr:template "treatment cycles";
        rr:class ncit:C25472; #cycle
    ];
     rr:predicateObjectMap [
        rr:predicate roo:P100042;  #has value
        rr:objectMap [
            rr:column "treatment cycles"; 
            rr:datatype xsd:integer;
        ];
    ].

map:doseReduction a rr:TriplesMap;
    rr:logicalTable map:basicQuery;
    rr:subjectMap [
        rr:template "dose reduction";
        rr:class ncit:C49505; #dose reduced is best fitting ontology? 
    ];
     rr:predicateObjectMap [
        rr:predicate roo:P100042;  #has value
        rr:objectMap [
            rr:column "dose reduction"; 
            rr:datatype xsd:boolean; 
        ];
    ].

map:surgery a rr:TriplesMap;
    rr:logicalTable map:basicQuery;
    rr:subjectMap [
        rr:template "surgery";
        rr:class 	ncit:C157740 ;  #cancer surgery
    ];
     rr:predicateObjectMap [
        rr:predicate roo:P100042;  #has value
        rr:objectMap [
            rr:column "surgeryPrimaryTumour"; 
            rr:datatype xsd:boolean; 
        ];
    ];
        rr:predicateObjectMap [                                                     #here of at primary tumor? concerning if yes
        rr:predicate roo:P100295;  #has procedure date                    
        rr:objectMap [
             rr:parentTriplesMap map:procedureDate;   
        ];
    ].

map:procedureDate a rr:TriplesMap;
    rr:logicalTable map:basicQuery;
    rr:subjectMap [
        rr:template "procedureDate";
        rr:class ncit:C117538 ;  #Procedure Date Time of Reference Timepoint
    ];
     rr:predicateObjectMap [
        rr:predicate roo:P100042;  #has value                           
        rr:objectMap [
            rr:column "procedureDate"; 
            rr:datatype xsd:date; 
        ];
    ].

map:IGRT a rr:TriplesMap;
    rr:logicalTable map:basicQuery;
    rr:subjectMap [
        rr:template "IGRT";
        rr:class ncit:C62727; # image guided radiation therapy
    ];
     rr:predicateObjectMap [
        rr:predicate roo:local_value;                                         
        rr:objectMap [
            rr:column "IGRT"; 
            rr:datatype xsd:string; 
        ];
    ].

map:ART a rr:TriplesMap;
    rr:logicalTable map:basicQuery;
    rr:subjectMap [
        rr:template "ART";
        rr:class ncit:C116432; # image guided adaptive radiation therapy                    # correct ontology? is it the same as ART
    ];
     rr:predicateObjectMap [
        rr:predicate roo:local_value;                                         
        rr:objectMap [
            rr:column "ART"; 
            rr:datatype xsd:string; 
        ];
    ].

map:planAdapted a rr:TriplesMap;
    rr:logicalTable map:basicQuery;
    rr:subjectMap [
        rr:template "planAdapted";
        rr:class roo:planAdaptation;                                                        #new roo class 
    ];
     rr:predicateObjectMap [
        rr:predicate roo:P100042;  #has value                                       
        rr:objectMap [
            rr:column "planAdapted"; 
            rr:datatype xsd:boulean; 
        ];
    ].

map:protonTherapyFactors a rr:TriplesMap;
    rr:logicalTable map:basicQuery;
    rr:subjectMap [
        rr:template "protonTherapyFactors";
        rr:class ncit:C66897; # proton beam radiation therapy
    ];
     rr:predicateObjectMap [
        rr:predicate roo:P100212; #has property                                        
        rr:objectMap [
            rr:parentTriplesMap map:numberOfScenariosForRobustEvaluation;
        ];
    ];
     rr:predicateObjectMap [
        rr:predicate roo:P100212; #has property                                         
        rr:objectMap [
            rr:parentTriplesMap map:numberOfBeams;
        ];
    ];
     rr:predicateObjectMap [
        rr:predicate roo:P100212; #has property                                        
        rr:objectMap [
            rr:parentTriplesMap map:robustTreatmentPlanningRangeUncertainty;         
        ];
    ];
     rr:predicateObjectMap [
        rr:predicate roo:P100212; #has property                                        
        rr:objectMap [
            rr:parentTriplesMap map:robustnessEvaluationSetup;
        ];
    ];
     rr:predicateObjectMap [
        rr:predicate roo:P100212; #has property                                         
        rr:objectMap [
            rr:parentTriplesMap map:layerRepainting;
        ];
    ];
     rr:predicateObjectMap [
        rr:predicate roo:P100212; #has property                                         
        rr:objectMap [
           rr:parentTriplesMap map:treatmentType;
        ];
    ];
     rr:predicateObjectMap [
        rr:predicate roo:P100212; #has property                                         
        rr:objectMap [
           rr:parentTriplesMap map:typeOfBeamAbsorber;
        ];
        ];
     rr:predicateObjectMap [
        rr:predicate roo:P100212; #has property                                         
        rr:objectMap [
           rr:parentTriplesMap map:doseEngine;
        ];
    ];
     rr:predicateObjectMap [
        rr:predicate roo:P100212; #has property                                         
        rr:objectMap [
            rr:parentTriplesMap map:MCUncertainty;   

        ];
    ].
map:numberOfScenariosForRobustEvaluation a rr:TriplesMap;
    rr:logicalTable map:basicQuery;
    rr:subjectMap [
        rr:template "numberOfScenariosForRobustEvaluation";
        rr:class  	roo:numberOfScenariosForRobustEvaluation;                                   #new roo class               
    ];
     rr:predicateObjectMap [
        rr:predicate roo:P100042;  #has value                                       
        rr:objectMap [
            rr:column "numberOfScenariosForRobustEvaluation"; 
            rr:datatype xsd:integer; 
        ];
    ].

map:numberOfBeams a rr:TriplesMap;
    rr:logicalTable map:basicQuery;
    rr:subjectMap [
        rr:template "numberOfBeams";
        rr:class  roo:numberOfBeams;                                                            #new roo class
    ];
     rr:predicateObjectMap [
        rr:predicate roo:P100042;  #has value                                       
        rr:objectMap [
            rr:column "numberOfBeams"; 
            rr:datatype xsd:integer; 
        ];
    ].

map:robustTreatmentPlanningRangeUncertainty a rr:TriplesMap;
    rr:logicalTable map:basicQuery;
    rr:subjectMap [
        rr:template "robustTreatmentPlanningRangeUncertainty";
        rr:class  	ncit:C71478;  #uncertainty                                                      ???? correct ontology
    ];
    rr:predicateObjectMap [
        rr:predicate roo:P100027; #has unit
        rr:objectMap [
            rr:parentTriplesMap map:percentage;
            ];       
    ];
     rr:predicateObjectMap [
        rr:predicate roo:P100042;  #has value                                       
        rr:objectMap [
            rr:column "robustTreatmentPlanningRangeUncertainty"; 
            rr:datatype xsd:integer; 
        ];
    ].

map:robustnessEvaluationSetup a rr:TriplesMap;
    rr:logicalTable map:basicQuery;
    rr:subjectMap [
        rr:template "robustnessEvaluationSetup";
        rr:class  	ncit:C134245 ;  #analytical procedure robustness                                    ???? correct ontology
    ];
    rr:predicateObjectMap [
        rr:predicate roo:P100027; #has unit
        rr:objectMap [
            rr:parentTriplesMap map:millimeter;
            ];       
    ];
     rr:predicateObjectMap [
        rr:predicate roo:P100042;  #has value                                       
        rr:objectMap [
            rr:column "robustnessEvaluationSetup"; 
            rr:datatype xsd:integer; 
        ];
    ].

map:layerRepainting a rr:TriplesMap;
    rr:logicalTable map:basicQuery;
    rr:subjectMap [
        rr:template "layerRepainting";
        rr:class  	ncit:C66831 ;  #layer                                                           ???? correct ontology
    ];
     rr:predicateObjectMap [
        rr:predicate roo:P100042;  #has value                                       
        rr:objectMap [
            rr:column "layerRepainting"; 
            rr:datatype xsd:integer;                                                               #???? double of integer
        ];
    ].

map:treatmentType a rr:TriplesMap;
    rr:logicalTable map:basicQuery;
    rr:subjectMap [
        rr:template "treatment type";
        rr:class  	ncit:C114461 ;  #categorical description type                                    ????correct ontology
    ];
    rr:predicateObjectMap [
        rr:predicate roo:local_value;
        rr:objectMap [
            rr:column "treatment type"; 
            rr:datatype xsd:string; 
            ];       
    ].

map:typeOfBeamAbsorber a rr:TriplesMap;
    rr:logicalTable map:basicQuery;
    rr:subjectMap [
        rr:template "treatment type";
        rr:class  	ncit:C50372;  #absorber device                                                    ????correct ontology
    ];
    rr:predicateObjectMap [
        rr:predicate roo:local_value;
        rr:objectMap [
            rr:column "type of beam absorber"; 
            rr:datatype xsd:string; 
            ];       
    ].

map:doseEngine a rr:TriplesMap;
    rr:logicalTable map:basicQuery;
    rr:subjectMap [
        rr:template "dose engine";
        rr:class ncit:C16275; #algorithm                                                             ????? correct ontology
# ncit:C94936 monte carlo method #ncit:C155822 Linear Energy Transfer (LET)-Optimized Intensity Modulated Proton Therapy (IMPT)
    ];
    rr:predicateObjectMap [
        rr:predicate roo:local_value;
        rr:objectMap [
            rr:column "dose engine"; 
            rr:datatype xsd:string; 
            ];       
    ].

map:percentage a rr:TriplesMap;
    rr:logicalTable map:basicQuery;
    rr:subjectMap [
        rr:template "percentage";
        rr:class uo:0000187; #percent                                                     
    ].

map:preparationProcedure a rr:TriplesMap;
    rr:logicalTable map:basicQuery;
    rr:subjectMap [
        rr:template "preparationProcedure";
        rr:class roo:preparationProcedure;  #                                                            new roo class                                                           
    ];
     rr:predicateObjectMap [
        rr:predicate roo:P100024;  #has procedure
        rr:objectMap [
            rr:parentTriplesMap map:dualEnergyPlanningCTScan; 
        ];
    ];
     rr:predicateObjectMap [
        rr:predicate roo:P100024;  #has procedure
        rr:objectMap [
            rr:parentTriplesMap map:planningPETCT; 
        ];
    ];
     rr:predicateObjectMap [
        rr:predicate roo:P100024;  #has procedure
        rr:objectMap [
            rr:parentTriplesMap map:planningMRI; 
        ];
    ];
     rr:predicateObjectMap [
        rr:predicate roo:P100212; #has property
        rr:objectMap [
            rr:parentTriplesMap map:targetVolume; 
        ];
    ];
     rr:predicateObjectMap [
        rr:predicate roo:P100212; #has property
        rr:objectMap [
            rr:parentTriplesMap map:GTVVolume; 
        ];
    ];
     rr:predicateObjectMap [
        rr:predicate roo:P100212; #has property
        rr:objectMap [
            rr:parentTriplesMap map:CTVVolume; 
        ];
    ];
     rr:predicateObjectMap [
        rr:predicate roo:P100024;  #has procedure
        rr:objectMap [
            rr:parentTriplesMap map:boostTechnique; 
        ];
    ];
    rr:predicateObjectMap [
        rr:predicate roo:P100278;
        rr:objectMap [
            rr:parentTriplesMap map:ultrasound;
        ];
    ];
    rr:predicateObjectMap [
        rr:predicate roo:P100024;
        rr:objectMap [
            rr:parentTriplesMap map:sentinelNodeBiopsy;
        ];
    ];
    rr:predicateObjectMap [
        rr:predicate roo:precedes;
        rr:objectMap [
            rr:parentTriplesMap map:surgery;
        ];
    ];
    rr:predicateObjectMap [
        rr:predicate roo:precedes;
        rr:objectMap [
            rr:parentTriplesMap map:radiotherapy;
        ];
    ];
    rr:predicateObjectMap [
        rr:predicate roo:precedes;
        rr:objectMap [
            rr:parentTriplesMap map:systemicTreatment;
        ];
    ].    

map:ultrasound a rr:TriplesMap;
    rr:logicalTable map:basicQuery;    
    rr:subjectMap [
            rr:template "patient/ultrasound";
            rr:class ncit:C17230;
    ];
    rr:predicateObjectMap [
            rr:predicate roo:local_value;
            rr:objectMap [
                rr:column "ultrasoundResults";
                rr:datatype xsd:string;
            ];
    ].

map:sentinelNodeBiopsy a rr:TriplesMap;
    rr:logicalTable map:basicQuery;    
    rr:subjectMap [
            rr:template "patient/sentinelNodeProcedure";
            rr:class ncit:C15667;
    ].

map:dualEnergyPlanningCTScan a rr:TriplesMap;
    rr:logicalTable map:basicQuery;
    rr:subjectMap [
        rr:template "dualEnergyPlanningCTScan";
        rr:class ncit:C121378; #Dual-Energy Computed Tomography
    ];
     rr:predicateObjectMap [
        rr:predicate roo:P100042;  #has value
        rr:objectMap [
            rr:column "dualEnergyPlanningCTScan"; 
            rr:datatype xsd:boolean; 
        ];
    ].
map:planningPETCT a rr:TriplesMap;
    rr:logicalTable map:basicQuery;
    rr:subjectMap [
        rr:template "planningPETCT";
        rr:class ncit:petct; #Positron Emission Tomography and Computed Tomography Scan
    ];
     rr:predicateObjectMap [
        rr:predicate roo:local_value;  #has value
        rr:objectMap [
            rr:column "planningPETCT"; 
            rr:datatype xsd:string; 
        ];
    ].

map:planningMRI a rr:TriplesMap;
    rr:logicalTable map:basicQuery;
    rr:subjectMap [
        rr:template "planningMRI";
        rr:class ncit:C16809; #Magnetic Resonance Imaging
    ];
     rr:predicateObjectMap [
        rr:predicate roo:P100042;  #has value
        rr:objectMap [
            rr:column "planningMRI"; 
            rr:datatype xsd:boolean; 
        ];
    ].
map:targetVolume a rr:TriplesMap;
    rr:logicalTable map:basicQuery;
    rr:subjectMap [
        rr:template "targetVolume";
        rr:class ncit:C82606; #Planning Target Volume                                          ?? taget volume = planning target volume
    ];
     rr:predicateObjectMap [
        rr:predicate roo:local_value;
        rr:objectMap [
            rr:column "targetVolume"; 
            rr:datatype xsd:string; 
        ];
    ].
map:GTVVolume a rr:TriplesMap;
    rr:logicalTable map:basicQuery;
    rr:subjectMap [
        rr:template "GTVVolume";
        rr:class ncit:C94515; #tumor volume                                                     ??? tumor volume = GTV?
    ];
     rr:predicateObjectMap [
        rr:predicate roo:P100027;  #has unit
        rr:objectMap [
            rr:parentTriplesMap map:CC; 
        ];
    ];
     rr:predicateObjectMap [
        rr:predicate roo:P100042;  #has value
        rr:objectMap [
            rr:column "GTVVolume"; 
            rr:datatype xsd:integer; 
        ];
    ].
map:CTVVolume a rr:TriplesMap;
    rr:logicalTable map:basicQuery;
    rr:subjectMap [
        rr:template "CTVVolume";
        rr:class ncit:C112912; #clinical target volume                                                     
    ];
     rr:predicateObjectMap [
        rr:predicate roo:P100027;  #has unit
        rr:objectMap [
            rr:parentTriplesMap map:CC; 
        ];
    ];
     rr:predicateObjectMap [
        rr:predicate roo:P100042;  #has value
        rr:objectMap [
            rr:column "CTVVolume"; 
            rr:datatype xsd:integer; 
        ];
    ].
map:boostTechnique a rr:TriplesMap;
    rr:logicalTable map:basicQuery;
    rr:subjectMap [
        rr:template "boostTechnique";
        rr:class ncit:C137908; #boost radiation therapy                                     ? boost technique = boost radiation therapy                                                     
    ];
     rr:predicateObjectMap [
        rr:predicate roo:local_value;
        rr:objectMap [
            rr:column "boostTechnique"; 
            rr:datatype xsd:string; 
        ];
    ].

map:CC a rr:TriplesMap;
    rr:logicalTable map:basicQuery;
    rr:subjectMap [
        rr:template "CC";
        rr:class uo:0000097; #cubic centimeter                                                     
    ].

map:prophylacticTargetRT a rr:TriplesMap;
    rr:logicalTable map:basicQuery;
    rr:subjectMap [
        rr:template "prophylacticTargetRT";
        rr:class ncit:prophylacticTargetRT; #preparation                                  ?? no fitting ontology                       
    ];
     rr:predicateObjectMap [
        rr:predicate roo:P100300 ;  #has RT start date
        rr:objectMap [
            rr:parentTriplesMap map:dateOfStartProphylacticTargetRT; 
        ];
    ];
     rr:predicateObjectMap [
        rr:predicate roo:P100299; #has RT end date
        rr:objectMap [
            rr:parentTriplesMap map:lastDayOfProphylacticTargetRT; 
        ];
    ];
     rr:predicateObjectMap [
        rr:predicate roo:P100212; #has property
        rr:objectMap [
            rr:parentTriplesMap map:totalDose; 
        ];
    ];
     rr:predicateObjectMap [
        rr:predicate roo:P100212; #has property
        rr:objectMap [
            rr:parentTriplesMap map:fractionDose; 
        ];
    ];
     rr:predicateObjectMap [
        rr:predicate roo:P100212; #has property
        rr:objectMap [
            rr:parentTriplesMap map:numberOfFractions; 
        ];
    ].

map:dateOfStartProphylacticTargetRT a rr:TriplesMap;
    rr:logicalTable map:basicQuery;
    rr:subjectMap [
        rr:template "dateOfStartProphylacticTargetRT";
        rr:class ncit:C80454; #Date of therapeutic procedure                                                ???? correct ontology 
    ];
     rr:predicateObjectMap [
        rr:predicate roo:P100042;  #has value
        rr:objectMap [
            rr:column "dateOfStartProphylacticTargetRT"; 
            rr:datatype xsd:date; 
        ];
    ].
map:lastDayOfProphylacticTargetRT a rr:TriplesMap;
    rr:logicalTable map:basicQuery;
    rr:subjectMap [
        rr:template "lastDayOfProphylacticTargetRT";
        rr:class ncit:C156814; #Date of Last Radiation Treatment                                            ???? correct ontology 
    ];
     rr:predicateObjectMap [
        rr:predicate roo:P100042;  #has value
        rr:objectMap [
            rr:column "lastDayOfProphylacticTargetRT"; 
            rr:datatype xsd:date; 
        ];
    ].
map:totalDose a rr:TriplesMap;
    rr:logicalTable map:basicQuery;
    rr:subjectMap [
        rr:template "totalDose";
        rr:class ncit:C94394; #cumulative dose                                             
    ];
     rr:predicateObjectMap [
        rr:predicate roo:P100042;  #has value
        rr:objectMap [
            rr:column "totalDose"; 
            rr:datatype xsd:double; 
        ];
    ].
map:fractionDose a rr:TriplesMap;
    rr:logicalTable map:basicQuery;
    rr:subjectMap [
        rr:template "fractionDose";
        rr:class roo:C100353; #radiotherapy fraction dose                                             
    ];
     rr:predicateObjectMap [
        rr:predicate roo:P100042;  #has value
        rr:objectMap [
            rr:column "fractionDose"; 
            rr:datatype xsd:double; 
        ];
    ].

map:numberOfFractions a rr:TriplesMap;
    rr:logicalTable map:basicQuery;
    rr:subjectMap [
        rr:template "numberOfFractions";
        rr:class ncit:C25514; #fraction                                            ???? correct ontology
    ];
     rr:predicateObjectMap [
        rr:predicate roo:P100042;  #has value
        rr:objectMap [
            rr:column "numberOfFractions"; 
            rr:datatype xsd:double; 
        ];
    ].

map:therapeuticTargetRT a rr:TriplesMap;
    rr:logicalTable map:basicQuery;
    rr:subjectMap [
        rr:template "therapeuticTargetRT";
        rr:class ncit:therapeuticTargetRT;                                                            # no fitting ontology                                                          
    ];
     rr:predicateObjectMap [
        rr:predicate roo:P100300 ;  #has RT start date
        rr:objectMap [
            rr:parentTriplesMap map:dateOfStartTherapeuticTargetRT; 
        ];
    ];
     rr:predicateObjectMap [
        rr:predicate roo:P100299; #has RT end date
        rr:objectMap [
            rr:parentTriplesMap map:lastDayOfTherapeuticTargetRT; 
        ];
    ];
     rr:predicateObjectMap [
        rr:predicate roo:P100212; #has property
        rr:objectMap [
            rr:parentTriplesMap map:fractionDose; 
        ];
    ];
     rr:predicateObjectMap [
        rr:predicate roo:P100212; #has property
        rr:objectMap [
            rr:parentTriplesMap map:numberOfFractions; 
        ];
    ];
     rr:predicateObjectMap [
        rr:predicate roo:P100212; #has property
        rr:objectMap [
            rr:parentTriplesMap map:doseToOAR; 
        ];
    ].

map:dateOfStartTherapeuticTargetRT a rr:TriplesMap;
    rr:logicalTable map:basicQuery;
    rr:subjectMap [
        rr:template "dateOfStartTherapeuticTargetRT";
        rr:class ncit:C80454; #Date of therapeutic procedure                                                ???? correct ontology 
    ];
     rr:predicateObjectMap [
        rr:predicate roo:P100042;  #has value
        rr:objectMap [
            rr:column "dateOfStartTherapeuticTargetRT"; 
            rr:datatype xsd:date; 
        ];
    ].

map:lastDayOfTherapeuticTargetRT a rr:TriplesMap;
    rr:logicalTable map:basicQuery;
    rr:subjectMap [
        rr:template "lastDayOfTherapeuticTargetRT";
        rr:class ncit:C156814; #Date of Last Radiation Treatment                                            ???? correct ontology 
    ];
     rr:predicateObjectMap [
        rr:predicate roo:P100042;  #has value
        rr:objectMap [
            rr:column "lastDayOfTherapeuticTargetRT"; 
            rr:datatype xsd:date; 
        ];
    ].

map:doseToOAR a rr:TriplesMap;
    rr:logicalTable map:basicQuery;
    rr:subjectMap [
        rr:template "doseToOARsTreatmentPlanning";
        rr:class roo:doseToOAR;                                                                      #new roo class
    ];
     rr:predicateObjectMap [
        rr:predicate roo:local_value;  
        rr:objectMap [
            rr:column "doseToOARsTreatmentPlanning"; 
            rr:datatype xsd:double; 
        ];
    ].

map:patientReportedOutcomeMeasures a rr:TriplesMap;
    rr:logicalTable map:basicQuery;
    rr:subjectMap [
        rr:template "patientReportedOutcomeMeasures";
        rr:class ncit:C102988; #Patient Reported Outcomes Measurement Information System                    #promis ipv prom??                                                          
    ];
     rr:predicateObjectMap [
        rr:predicate roo:P100423  ;  #consistsOf
        rr:objectMap [
            rr:parentTriplesMap map:EORTCQLQ_HAndN35;                                                       #no "&" possible                                                     
        ];
    ];
     rr:predicateObjectMap [
        rr:predicate roo:P100423  ;  #consistsOf
        rr:objectMap [
            rr:parentTriplesMap map:EORTCQLQ_C30;                                                         
        ];
    ];
     rr:predicateObjectMap [
        rr:predicate roo:P100423  ;  #consistsOf
        rr:objectMap [
            rr:parentTriplesMap map:EUROQOL_5D;                                                         
        ];
    ].

map:EORTCQLQ_HAndN35 a rr:TriplesMap;
    rr:logicalTable map:basicQuery;
    rr:subjectMap [
        rr:template "EORTCQLQ_HAndN35";
        rr:class ncit:C17048; #questionnaire 
    ];
     rr:predicateObjectMap [
        rr:predicate roo:P100042;  #has value
        rr:objectMap [
            rr:column "EORTCQLQ_HAndN35"; 
            rr:datatype xsd:integer;                                                                    #??? list?
        ];
    ].

map:EORTCQLQ_C30 a rr:TriplesMap;
    rr:logicalTable map:basicQuery;
    rr:subjectMap [
        rr:template "EORTCQLQ_C30";
        rr:class ncit:C17048; #questionnaire 
    ];
     rr:predicateObjectMap [
        rr:predicate roo:P100042;  #has value
        rr:objectMap [
            rr:column "EORTCQLQ_C30"; 
            rr:datatype xsd:integer;                                                                    #??? list?
        ];
    ].

map:EUROQOL_5D a rr:TriplesMap;
    rr:logicalTable map:basicQuery;
    rr:subjectMap [
        rr:template "EUROQOL_5D";
        rr:class ncit:C17048; #questionnaire 
    ];
     rr:predicateObjectMap [
        rr:predicate roo:P100042;  #has value
        rr:objectMap [
            rr:column "EUROQOL_5D"; 
            rr:datatype xsd:integer;                                                                    #??? list?
        ];
    ].
