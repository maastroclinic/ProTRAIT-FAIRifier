
##########################################
# Add tumour properties                                         
########################################## 
map:tumourPropertiesQuery a rr:LogicalTable;
    rr:sqlQuery """SELECT 
    GEN_IDNUMBER as id, 
    HN_SURG_SURG_MARG as surgicalMargins,
    HN_SURG_MAX_DIAM as maximumTumourDiameter,
    HN_SURG_DEPTH_INFIL as depthOfInfiltration,
    HN_SURG_ANGIO as angioinvasion,
    HN_SURG_PERING as periNeuralGrowth,
    HN_SURG_INFLTR_GR as infiltrativeGrowth
        FROM PBDWHackathon2018;""";
    rdfs:label "";
    skos:definition "".

map:tumourProperties a rr:TriplesMap;
    rr:logicalTable map:tumourPropertiesQuery;    
    rr:subjectMap [
        rr:template "patient/neoplasm/tumourProperties";
        rr:class roo:tumourProperties; #new roo class
    ];
     rr:predicateObjectMap [
        rr:predicate roo:P100212; #has_property 
        rr:objectMap [
            rr:parentTriplesMap map:surgicalMargins; 
            rr:joinCondition [
                rr:child "id";
                rr:parent "id";
            ];
        ];
    ];
     rr:predicateObjectMap [
        rr:predicate roo:P100212; #has_property                                        
        rr:objectMap [
            rr:parentTriplesMap map:maximumTumourDiameter;  
            rr:joinCondition [
                rr:child "id";
                rr:parent "id";
            ];                               
        ];
    ];
     rr:predicateObjectMap [
        rr:predicate roo:P100212; #has_property                                      
        rr:objectMap [
            rr:parentTriplesMap map:depthOfInfiltration; 
            rr:joinCondition [
                rr:child "id";
                rr:parent "id";
            ];                    
        ];
    ];
     rr:predicateObjectMap [
        rr:predicate roo:P100212; #has_property                                        
        rr:objectMap [
            rr:parentTriplesMap map:angioinvasion; 
            rr:joinCondition [
                rr:child "id";
                rr:parent "id";
            ];                                  
        ];
    ];
     rr:predicateObjectMap [
        rr:predicate roo:P100212; #has_property                                        
        rr:objectMap [
            rr:parentTriplesMap map:periNeuralGrowth;  
            rr:joinCondition [
                rr:child "id";
                rr:parent "id";
            ];                                  
        ];
    ];
     rr:predicateObjectMap [
        rr:predicate roo:P100212; #has_property                                        
        rr:objectMap [
            rr:parentTriplesMap map:infiltrativeGrowth;  
            rr:joinCondition [
                rr:child "id";
                rr:parent "id";
            ];                               
        ];
    ].

map:surgicalMargins a rr:TriplesMap;
    rr:logicalTable map:tumourPropertiesQuery;
    rr:subjectMap [
        rr:template "patient/{id}/neoplasm/tumourProperties/surgicalMargins/{surgicalMargins}";
        rr:class ncit:C41227; #surgical margins
    ];
    rr:predicateObjectMap [
        rr:predicate roo:local_value;  
        rr:objectMap [
            rr:column "surgicalMargins"; 
            rr:datatype xsd:string; 
        ];
     ].

map:maximumTumourDiameter a rr:TriplesMap;
    rr:logicalTable map:tumourPropertiesQuery;
    rr:subjectMap [
        rr:template "patient/{id}/neoplasm/tumourProperties/maximumTumourDiameter/{maximumTumourDiameter}";
        rr:class ncit:C96684; #longest diameter
    ];
     rr:predicateObjectMap [
        rr:predicate roo:P100042; #has_value
        rr:objectMap [
            rr:column "maximumTumourDiameter"; 
            rr:datatype xsd:integer; 
        ];
    ];
    rr:predicateObjectMap [
        rr:predicate roo:P100027; #has_unit
        rr:objectMap [
            rr:parentTriplesMap map:millimetreTumour;
            rr:joinCondition [
                rr:child "id";
                rr:parent "id";
            ];
        ];       
    ].

map:depthOfInfiltration a rr:TriplesMap;
    rr:logicalTable map:tumourPropertiesQuery;
    rr:subjectMap [
        rr:template "patient/{id}/neoplasm/tumourProperties/depthOfInfiltration/{depthOfInfiltration}";
        rr:class ncit:C28491; #cellular infiltration
    ];
     rr:predicateObjectMap [
        rr:predicate roo:P100042; #has_value
        rr:objectMap [
            rr:column "depthOfInfiltration"; 
            rr:datatype xsd:integer; 
        ];
    ];
    rr:predicateObjectMap [
        rr:predicate roo:P100027; #has unit
        rr:objectMap [
            rr:parentTriplesMap map:millimetreTumour;
            rr:joinCondition [
                rr:child "id";
                rr:parent "id";
            ];
        ];       
    ].

map:angioinvasion a rr:TriplesMap;
    rr:logicalTable map:tumourPropertiesQuery;
    rr:subjectMap [
        rr:template "patient/{id}/neoplasm/tumourProperties/angioinvasion/{angioinvasion}";
        rr:class ncit:C39589; #angioinvasion
    ];
     rr:predicateObjectMap [
        rr:predicate roo:P100042; #has_value
        rr:objectMap [
            rr:column "angioinvasion"; 
            rr:datatype xsd:boolean; 
        ];
    ].

map:periNeuralGrowth a rr:TriplesMap;
    rr:logicalTable map:tumourPropertiesQuery;
    rr:subjectMap [
        rr:template "patient/{id}/neoplasm/tumourProperties/periNeuralGrowth/{periNeuralGrowth}";
        rr:class ncit:C48260; #perineural invasion  
    ];                                                   
     rr:predicateObjectMap [
        rr:predicate roo:P100042; #has_value
        rr:objectMap [
            rr:column "periNeuralGrowth"; 
            rr:datatype xsd:boolean; 
        ];
    ].

map:infiltrativeGrowth a rr:TriplesMap;
    rr:logicalTable map:tumourPropertiesQuery;
    rr:subjectMap [
        rr:template "patient/{id}/neoplasm/tumourProperties/infiltrativeGrowth/{infiltrativeGrowth}";
        rr:class ncit:C41453; #infiltrative growth pattern                                       
    ];
     rr:predicateObjectMap [
        rr:predicate roo:P100042; #has_value
        rr:objectMap [
            rr:column "infiltrativeGrowth"; 
            rr:datatype xsd:boolean; 
        ];
    ].

map:millimetreTumour a rr:TriplesMap;
    rr:logicalTable map:tumourPropertiesQuery;    
    rr:subjectMap [
        rr:template "millimetre";
        rr:class uo:0000016;
    ].  

map:neoplasm rr:predicateObjectMap [
        rr:predicate roo:has_tumour_properties; #new roo predicate
        rr:objectMap [
            rr:parentTriplesMap map:tumourProperties;
            rr:joinCondition [
                rr:child "id";
                rr:parent "id";
            ];
        ];
    ].