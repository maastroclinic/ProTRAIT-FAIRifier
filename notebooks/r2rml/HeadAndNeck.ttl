@prefix rr: <http://www.w3.org/ns/r2rml#>.
@prefix ex: <http://example.com/ns#>.
@prefix map: <http://mapping.local/>.
@prefix sty: <http://purl.bioontology.org/ontology/STY/>.
@prefix sio: <http://semanticscience.org/resource/SIO_>.
@prefix foaf: <http://xmlns.com/foaf/0.1/>.
@prefix rdf: <http://www.w3.org/1999/02/22-rdf-syntax-ns#>.
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix xsd: <http://www.w3.org/2001/XMLSchema#>.
@prefix ncit: <http://ncicb.nci.nih.gov/xml/owl/EVS/Thesaurus.owl#>.
@prefix roo: <http://www.cancerdata.org/roo/>.
@prefix icd: <http://purl.bioontology.org/ontology/ICD10/>.
@prefix skos: <http://www.w3.org/2008/05/skos#>.
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#>.
@prefix uo: <http://purl.obolibrary.org/obo/uo_>.
@prefix time: <http://www.w3.org/2006/time#>.


map:basicQuery a rr:LogicalTable;
    rr:sqlQuery """SELECT PatientID as id,  ROUND(CAST(Age as decimal),0) as age, Gender as sex, Clinical_T_Stage as clinical_t, Clinical_N_Stage as clinical_n,
SurvivalTime as survival_time,DeadStatus as vital_status, 
(CASE WHEN (CAST(SurvivalTime as decimal)>730) THEN 1 WHEN (CAST(SurvivalTime as decimal)<=730 AND DeadStatus='1') THEN 0 ELSE NULL END) AS survival_2y 
FROM PBDWHackathon2018;""";
    rdfs:label """Every row in this table should correspond to a unique patient.<br/>
The target variables have the following name and specific meaning:
The table should contain a unique patient identifier, age, sex, t-stage, n-stage, survival time in days and vital status at this time.<br/>
<ul>
<li>id: unique identifier of the patient</li>
<li>age:  patient's age at diagnosis</li>
<li>sex:  patient's biological sex</li>
<li>clinical_t: clinical <strong>tumour</strong> stage</li>
<li>clinical_n: clinical <strong>nodal</strong> stage</li>
<li>survival_2y: two year survival </li>
</ul>""";
    skos:definition "id,age,sex,clinical_t,clinical_n,survival_2y".

map:patient a rr:TriplesMap;
    rr:logicalTable map:basicQuery; 
    rr:subjectMap [
        rr:template "patient/";
        rr:class ncit:C16960; #patient
    ];
    rr:predicateObjectMap [
        rr:predicate roo:P100020; #has_disease
        rr:objectMap [
            rr:parentTriplesMap map:neoplasm;
            rr:joinCondition [
                rr:child "id";
                rr:parent "id";
            ];
        ];
    ];
    rr:predicateObjectMap [
        rr:predicate roo:P100291; #has_patient_finding
        rr:objectMap [
            rr:parentTriplesMap map:hpvStatus;
            rr:joinCondition [
                rr:child "id";
                rr:parent "id";
            ];
        ];
    ];
    rr:predicateObjectMap [
        rr:predicate roo:P100291; #has_patient_finding
        rr:objectMap [
            rr:parentTriplesMap map:ebvStatus;
            rr:joinCondition [
                rr:child "id";
                rr:parent "id";
            ];
        ];    
    ];
    rr:predicateObjectMap [
        rr:predicate roo:has_reported; #new roo predicate                                                                                           # reports?
        rr:objectMap [
            rr:parentTriplesMap map:patientReportedOutcomeMeasures;
            rr:joinCondition [
                rr:child "id";
                rr:parent "id";
            ];
        ];
    ].

map:neoplasm a rr:TriplesMap;
    rr:logicalTable map:basicQuery;    
    rr:subjectMap [
        rr:template "patient/neoplasm";
        rr:class ncit:C3262; #neoplasm
    ];
    rr:predicateObjectMap [
        rr:predicate roo:has_p16Status;
        rr:objectMap [
            rr:parentTriplesMap map:p16Status; #new roo predicate
            rr:joinCondition [
                rr:child "id";
                rr:parent "id";
            ];
        ];
    ];
    rr:predicateObjectMap [
        rr:predicate roo:has_subtype;
        rr:objectMap [
            rr:parentTriplesMap map:headAndNeckNeoplasm;
            rr:joinCondition [
                rr:child "id";
                rr:parent "id";
            ];
        ];
    ].    

map:headAndNeckNeoplasm a rr:TriplesMap;
    rr:logicalTable map:basicQuery;
    rr:subjectMap [
        rr:template "Postoperative setting neck";
        rr:class ncit:C3077; #head and neck neoplasm 
    ];
     rr:predicateObjectMap [
        rr:predicate roo:P100310; #has surgical procedure
        rr:objectMap [
            rr:parentTriplesMap map:surgeryOfTheNeck;
            rr:joinCondition [
                rr:child "id";
                rr:parent "id";
            ]; 
        ];
    ];
     rr:predicateObjectMap [
        rr:predicate roo:P100295; #has procedure date
        rr:objectMap [
            rr:parentTriplesMap map:dateOfSurgeryOfTheNeck;
            rr:joinCondition [
                rr:child "id";
                rr:parent "id";
            ]; 
        ];
    ].

map:surgeryOfTheNeck a rr:TriplesMap;
    rr:logicalTable map:basicQuery;
    rr:subjectMap [
        rr:template "surgeryOfTheNeck";
        rr:class ncit:C157871; #head and neck cancer surgery
    ];
     rr:predicateObjectMap [
        rr:predicate roo:P100042; #has value
        rr:objectMap [
            rr:column "surgeryOfTheNeck"; 
            rr:datatype xsd:boolean; 
        ];
    ].

map:dateOfSurgeryOfTheNeck a rr:TriplesMap;
    rr:logicalTable map:basicQuery;
    rr:subjectMap [
        rr:template "surgeryOfTheNeck";
        rr:class ncit:C80454; #date of therapeutic procedure
    ];
     rr:predicateObjectMap [
        rr:predicate roo:P100042; #has_value
        rr:objectMap [
            rr:column "surgeryOfTheNeck"; 
            rr:datatype xsd:date; 
        ];
    ].
map:p16Status a rr:TriplesMap;
    rr:logicalTable map:basicQuery;    
    rr:subjectMap [
        rr:template "patient/neoplasm/p16Status";
        rr:class ncit:C95990; #p16 Positive Neoplastic Cells Present
    ];
    rr:predicateObjectMap [
        rr:predicate roo:local_value;
        rr:objectMap [
            rr:column "p16Status";
            rr:datatype xsd:string;
        ];
    ].

map:hpvStatus a rr:TriplesMap;
    rr:logicalTable map:basicQuery; 
    rr:subjectMap [
        rr:template "patient/hpvStatus/";
        rr:class ncit:C128839; #Human Papillomavirus Positive
    ];
    rr:predicateObjectMap [
        rr:predicate roo:local_value;
        rr:objectMap [
            rr:column "hpvStatus";
            rr:datatype xsd:string;
        ];
    ].
    
map:ebvStatus a rr:TriplesMap;
    rr:logicalTable map:basicQuery; 
    rr:subjectMap [
        rr:template "patient/ebvStatus/";
        rr:class ncit:C157444; #epstein-barr viral status
    ];
    rr:predicateObjectMap [
        rr:predicate roo:local_value;
        rr:objectMap [
            rr:column "ebvStatus";
            rr:datatype xsd:string;
        ];
    ].

map:patientReportedOutcomeMeasures a rr:TriplesMap;
    rr:logicalTable map:basicQuery;
    rr:subjectMap [
        rr:template "patient/{id}/patientReportedOutcomeMeasures";
        rr:class roo:patientReportedOutcomeMeasures; #new roo class                                                        
    ];
    rr:predicateObjectMap [
        rr:predicate roo:P100423; #consistsOf
        rr:objectMap [
            rr:parentTriplesMap map:EORTCQLQ_HAndN35; #no "&" possible  
            rr:joinCondition [
                rr:child "id";
                rr:parent "id";
            ];                                                                                                            
        ];
    ].